<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>CSL-BASE-POM</name>

	<groupId>com.sc.rdc.csl</groupId>
	<artifactId>csl-base-pom</artifactId>
	<version>8.0.50</version>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>

		<!-- IMP : Update the spring-boot.version property also on change -->
			<version>2.4.0</version>
		<!-- ............................................................ -->
	</parent>

	<properties>
		<base-pom.artifactId>csl-base-pom</base-pom.artifactId>
		<base-pom.version>8.0.10</base-pom.version>
		<java.version>11</java.version>
		<spring-boot.version>2.4.0</spring-boot.version>
		<tomcat.version>9.0.37</tomcat.version>

		<is.library>true</is.library>
		<skipITs>false</skipITs>
		<skipTests>false</skipTests>
		<skipUTs>${skipTests}</skipUTs>
		<csl-validators.version>2.1.9</csl-validators.version>
		<csl-lib-base.version>-</csl-lib-base.version>
		<csl-lib-cache.version>-</csl-lib-cache.version>

		<csl-svc-casas-v4.version>0.0.0-dev6-225cb2</csl-svc-casas-v4.version>

		<bcpg-jdk15.version>1.46</bcpg-jdk15.version>
		<spring-boot-starter-parent.version>${spring-boot.version}</spring-boot-starter-parent.version>
		<spring-cloud-starter-hystrix.version>1.3.6.RELEASE</spring-cloud-starter-hystrix.version>
		<spring-boot-starter-thymeleaf.version>${spring-boot.version}</spring-boot-starter-thymeleaf.version>
		<spring-boot-starter-freemarker.version>${spring-boot.version}</spring-boot-starter-freemarker.version>
		<spring-boot-starter-jasypt.version>1.12</spring-boot-starter-jasypt.version>
		<spring-cloud-starter-kubernetes.version>2.0.0-M6</spring-cloud-starter-kubernetes.version>
		<spring-cloud-starter-feign.version>2.0.0.M2</spring-cloud-starter-feign.version>
		<!-- Maven Plugins -->
		<jacoco.version>0.8.6</jacoco.version>
		<aspectj-maven-plugin.version>1.12.6</aspectj-maven-plugin.version>
		<checkstyle.version>8.36.1</checkstyle.version>
		<maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
		<findbugs-maven-plugin.version>3.0.4</findbugs-maven-plugin.version>
		<findbugs.version>3.0.1</findbugs.version>
		<xml-maven-plugin.version>1.0</xml-maven-plugin.version>
		<cxf-codegen-plugin.version>${cxf.version}</cxf-codegen-plugin.version>
		<apt-maven-plugin.version>1.1.3</apt-maven-plugin.version>
		<junit-vintage-engine.version>5.8.1</junit-vintage-engine.version>

		<cxf-xjc-plugin.version>3.3.1</cxf-xjc-plugin.version>
		<maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
		<graphql-codegen-maven-plugin.version>3.0.0</graphql-codegen-maven-plugin.version>
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
		<maven-remote-resources-plugin.version>1.5</maven-remote-resources-plugin.version>
		<maven-pmd-plugin.version>3.8</maven-pmd-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>
		<flyway-maven-plugin.version>4.2.0</flyway-maven-plugin.version>
		<liquibase-maven-plugin.version>3.5.2</liquibase-maven-plugin.version>
		<git-commit-id-plugin.version>4.0.2</git-commit-id-plugin.version>

		<jasperreports.version>6.5.1</jasperreports.version>
		<groovy.version>3.0.6</groovy.version>
		<lowagie-itext.version>2.1.7</lowagie-itext.version>

		<!-- Test libs -->
		<rest-assured.version>3.0.3</rest-assured.version>
		<littleproxy.version>1.1.2</littleproxy.version>
		<xmlunit.version>2.3.0</xmlunit.version>
		<mockito.version>3.4.4</mockito.version>
		<powermock.version>2.0.9</powermock.version>
		<system-rules.version>1.16.1</system-rules.version>
		<javassist.version>3.27.0-GA</javassist.version>
		<junit.version>4.13.2</junit.version>

		<!-- 3rd Party libs -->
		<filenet-client.version>8.0.0</filenet-client.version>
		<webmethods-uber.version>1.0.0</webmethods-uber.version>

		<cxf.version>3.4.3</cxf.version>
		<cxf-spring-boot-starter-jaxrs.version>${cxf.version}</cxf-spring-boot-starter-jaxrs.version>
		<cxf-spring-boot-starter-jaxws.version>${cxf.version}</cxf-spring-boot-starter-jaxws.version>
		<cxf-rt-rs-security-oauth2.version>${cxf.version}</cxf-rt-rs-security-oauth2.version>
		<cxf-rt-wsdl.version>${cxf.version}</cxf-rt-wsdl.version>
		<org.mapstruct.version>1.4.0.Final</org.mapstruct.version>

		<camel-spring-boot-starter.version>3.0.0-RC3</camel-spring-boot-starter.version>
        <mybatis-spring-boot-starter.version>1.3.0</mybatis-spring-boot-starter.version>
		<orika-spring-boot-starter.version>1.2.0</orika-spring-boot-starter.version>

		<crnk.version>3.2.20200419165537</crnk.version>
		<graphql-spring-boot.version>11.1.0</graphql-spring-boot.version>
        <graphql-java.version>6.1.0</graphql-java.version>
		<graphql-java-extended-scalars.version>1.0.1</graphql-java-extended-scalars.version>
        <dozer.version>5.5.1</dozer.version>
        <hazelcast.version>4.0.3</hazelcast.version>
		<hazelcast-kubernetes.version>2.1</hazelcast-kubernetes.version>
		<elasticsearch.version>7.8.1</elasticsearch.version>
        <java-jwt.version>3.11.0</java-jwt.version>
        <querydsl.version>3.6.3</querydsl.version>

		<ojdbc8.version>19.7.0.0</ojdbc8.version>
        <db2.version>9.7.osgi</db2.version>
        <postgresql-jdbc.version>42.2.18</postgresql-jdbc.version>
        <ibm.mq.version>7.0.1.0</ibm.mq.version>
        <ibm.mq.allclient.version>8.0.0.5</ibm.mq.allclient.version>
        <javax.jmsapi.version>2.0.1</javax.jmsapi.version>

        <maven-artifact.version>3.3.9</maven-artifact.version>
		<jsch.version>0.1.53</jsch.version>
		<itext.version>7.0.0</itext.version>
		<itextpdf.version>5.5.9</itextpdf.version>
		<jcaptcha-all.version>1.0-RC6</jcaptcha-all.version>
		<pinyin4j.version>2.5.1</pinyin4j.version>
		<maxant.rules.version>2.2.1</maxant.rules.version>
		<pushy.version>0.9.3</pushy.version>
		<turo.pushy.version>0.13.4</turo.pushy.version>
		<firebase-admin.version>5.9.0</firebase-admin.version>
        <apns.version>1.0.0.Beta6</apns.version>
		<reflections.version>0.9.11</reflections.version>
		<camel-quartz2.version>2.19.0</camel-quartz2.version>
		<camel-jms.version>3.0.0-RC3</camel-jms.version>
		<quartz.version>2.3.2</quartz.version>
		<c3p0.version>0.9.5.4</c3p0.version>
		<swagger-ui.version>3.23.11</swagger-ui.version>

		<!--Apache Commons dependencies-->
		<commons-lang3.version>3.11</commons-lang3.version>
		<commons-text.version>1.8</commons-text.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<commons-io.version>2.8.0</commons-io.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<commons-math3.version>3.6.1</commons-math3.version>
		<httpclient.version>4.5.13</httpclient.version>

		<HikariCP.version>2.7.5</HikariCP.version>
		<org.apache.cxf.xjc-utils.version>3.1.0</org.apache.cxf.xjc-utils.version>
		<guava.version>30.0-jre</guava.version>

		<oauth.version>20100527</oauth.version>
		<oauth-httpclient3.version>20090617</oauth-httpclient3.version>
		<vavr.version>0.9.0</vavr.version>
		<rulebook.version>0.6.2</rulebook.version>
		<kafka.version>1.0.0</kafka.version>
		<org.everit.json.schema.version>1.5.1</org.everit.json.schema.version>
		<jsonpath.version>2.3.0</jsonpath.version>

		<hbase-uber-scb.version>1.1.2.2.3.2.28-2</hbase-uber-scb.version>
		<hadoop-uber-scb-version>2.7.1.2.3.2.0-2950</hadoop-uber-scb-version>

		<poi.version>3.16</poi.version>
		<poi-ooxml.version>3.16</poi-ooxml.version>
		<logstash-logback-encoder.version>6.3</logstash-logback-encoder.version>
		<ECSPIDGeneratorv2.version>1.0.1</ECSPIDGeneratorv2.version>
		<springfox.version>2.9.2</springfox.version>
		<swagger-annotations.version>1.5.13</swagger-annotations.version>
		<cucumber-junit.version>1.2.5</cucumber-junit.version>
		<mastercard-sdk.version>1.0.3</mastercard-sdk.version>
        <joinfaces.version>2.4.1</joinfaces.version>

		<!--IdentityX Library-->
		<identity.client.sdk.version>4.4.0.10</identity.client.sdk.version>
		<feign-form-spring.version>3.8.0</feign-form-spring.version>

		<!-- Kotlin libraries -->
		<kotlin.version>1.3.72</kotlin.version>

		<!-- Google zxing libraries -->
		<google-zxing.version>3.3.3</google-zxing.version>

		<!-- Libraries for RFT Testing Framework -->
		<spring.cloud.contract.dependencies.version>3.0.0-M4</spring.cloud.contract.dependencies.version>
		<spring.cloud.verifier.version>3.0.0-M4</spring.cloud.verifier.version>
		<spring.cloud.wiremock.version>3.0.4</spring.cloud.wiremock.version>
		<spring.cloud.dependencies.version>2020.0.0-M4</spring.cloud.dependencies.version>
		<spring-cloud-starter-netflix-hystrix.version>2.2.6.RELEASE</spring-cloud-starter-netflix-hystrix.version>
		<spring-cloud-starter-netflix-hystrix-dashboard.version>2.2.6.RELEASE</spring-cloud-starter-netflix-hystrix-dashboard.version>

		<h2.database.version>1.4.197</h2.database.version>
		<cdi-api.version>2.0</cdi-api.version>
		<!-- libs to mock services & run integration test -->
		<zerocode-rest-bdd.version>1.2.9</zerocode-rest-bdd.version>
		<genie.version>4.1.2</genie.version>

		<!-- MasterCard OAUTH SIGN-->
		<signpost-core.version>1.2.1.2</signpost-core.version>

		<!-- libs to mock services & run integration test -->
		<zerocode-tdd.version>1.3.4</zerocode-tdd.version>
		<micro-simulator.version>1.1.8</micro-simulator.version>

		<!-- Google Code libPhoneNumber -->
		<libphonenumber.version>6.2</libphonenumber.version>
		<io.codahale.metrics.version>3.0.2</io.codahale.metrics.version>
		<spring.metrics.version>0.5.1.RELEASE</spring.metrics.version>
		<commons-email.version>1.5</commons-email.version>


		<swagger-maven-plugin.version>2.0.5</swagger-maven-plugin.version>
		<openApi.resource.packages.extended>com.sc.csl.*</openApi.resource.packages.extended>
		<openApi.resource.packages>com.sc.rdc.csl.*</openApi.resource.packages>
		<csl-lib-swagger-jsonapi-generator.version>1.0.8</csl-lib-swagger-jsonapi-generator.version>
        <commons-validator.version>1.7</commons-validator.version>

		<!-- EDMi Solace Migration -->
		<qpid-jms-client.version>0.54.0</qpid-jms-client.version>

		<!-- Twilio SDK -->
		<twilio.version>7.38.0</twilio.version>

		<!-- messaginghub Pooling Jms-->
		<pooled-jms.version>1.0.4</pooled-jms.version>

		<nimbus-jose.version>7.9</nimbus-jose.version>

		<!-- apache tika version -->
		<apachetika.version>1.22</apachetika.version>

		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-jaxb2-plugin.version>0.14.0</maven-jaxb2-plugin.version>

		<micrometer-registry-jmx.version>1.5.2</micrometer-registry-jmx.version>
		<sol-jms.version>10.9.1</sol-jms.version>
		<xml-apis.version>1.4.01</xml-apis.version>
		<skipRulesArtifact>false</skipRulesArtifact>

		<hibernate-types-52.version>2.10.0</hibernate-types-52.version>

		<spring-web-reactive.version>5.0.0.M4</spring-web-reactive.version>
		<spring-web.version>5.3.10</spring-web.version>
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<sun-jaxb.version>2.3.0</sun-jaxb.version>
		<hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>

		<!-- Image IO-->
		<javaxt-core.version>1.7.8</javaxt-core.version>

		<wss4j.version>1.6.19</wss4j.version>

		<org-apache-tomcat-embed.version>9.0.48</org-apache-tomcat-embed.version>
		<org-bouncycastle-bcprov-jdk15on.version>1.67</org-bouncycastle-bcprov-jdk15on.version>
		<net-mini-json-smart.version>2.4.6</net-mini-json-smart.version>

		<netty.version>4.1.59.Final</netty.version>
		<netty-transport-native-epoll-classifier>linux-x86_64</netty-transport-native-epoll-classifier>
		<netty-transport-native-kqueue-classifier>osx-x86_64</netty-transport-native-kqueue-classifier>

		<opensaml.version>2.6.5</opensaml.version>
		<xmlsec.version>2.0.3</xmlsec.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		 	<dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>libphonenumber</artifactId>
                <version>${libphonenumber.version}</version>
            </dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpg-jdk15</artifactId>
				<version>${bcpg-jdk15.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${commons-email.version}</version>
			</dependency>

			<dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${apachetika.version}</version>
            </dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${commons-math3.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-security-oauth2</artifactId>
				<version>${cxf-rt-rs-security-oauth2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.ws.security</groupId>
				<artifactId>wss4j</artifactId>
				<version>${wss4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring-boot-starter.version}</version>
			</dependency>

			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>${spring-boot-starter-parent.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring-boot-starter-parent.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-activemq</artifactId>
				<version>${spring-boot-starter-parent.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-thymeleaf</artifactId>
				<version>${spring-boot-starter-thymeleaf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-freemarker</artifactId>
				<version>${spring-boot-starter-freemarker.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
				<version>${cxf-spring-boot-starter-jaxws.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-kubernetes</artifactId>
				<version>${spring-cloud-starter-kubernetes.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-wsdl</artifactId>
				<version>${cxf-rt-wsdl.version}</version>
			</dependency>

			<dependency>
                 <groupId>net.rakugakibox.spring.boot</groupId>
                 <artifactId>orika-spring-boot-starter</artifactId>
                 <version>${orika-spring-boot-starter.version}</version>
             </dependency>

			<dependency>
				<groupId>com.octo.captcha</groupId>
				<artifactId>jcaptcha-all</artifactId>
				<version>${jcaptcha-all.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
					<exclusion>
						<groupId>quartz</groupId>
						<artifactId>quartz</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
				<version>${pinyin4j.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.maxant</groupId>
				<artifactId>rules</artifactId>
				<version>${maxant.rules.version}</version>
			</dependency>

			<dependency>
				<groupId>org.reflections</groupId>
				<artifactId>reflections</artifactId>
				<version>${reflections.version}</version>
			</dependency>

			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>transport</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>

			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>

			<dependency>
				<groupId>com.oracle.database.jdbc</groupId>
				<artifactId>ojdbc8</artifactId>
				<version>${ojdbc8.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ibm</groupId>
				<artifactId>db2jcc4</artifactId>
				<version>${db2.version}</version>
			</dependency>

			<dependency>
			    <groupId>org.postgresql</groupId>
			    <artifactId>postgresql</artifactId>
			    <version>${postgresql-jdbc.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-artifact</artifactId>
				<version>${maven-artifact.version}</version>
			</dependency>

			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>${jsch.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>

            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-kubernetes</artifactId>
                <version>${hazelcast-kubernetes.version}</version>
            </dependency>

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>kernel</artifactId>
				<version>${itext.version}</version>
			</dependency>

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itextpdf</artifactId>
				<version>${itextpdf.version}</version>
			</dependency>

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>io</artifactId>
				<version>${itext.version}</version>
			</dependency>

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>layout</artifactId>
				<version>${itext.version}</version>
			</dependency>

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>forms</artifactId>
				<version>${itext.version}</version>
			</dependency>

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>pdfa</artifactId>
				<version>${itext.version}</version>
			</dependency>

			<dependency>
				<groupId>com.notnoop.apns</groupId>
				<artifactId>apns</artifactId>
				<version>${apns.version}</version>
			</dependency>

			<dependency>
				<groupId>com.relayrides</groupId>
				<artifactId>pushy</artifactId>
				<version>${pushy.version}</version>
			</dependency>

			<dependency>
				<groupId>com.turo</groupId>
				<artifactId>pushy</artifactId>
				<version>${turo.pushy.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.firebase</groupId>
				<artifactId>firebase-admin</artifactId>
				<version>${firebase-admin.version}</version>
			</dependency>

			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-apt</artifactId>
				<version>${querydsl.version}</version>
			</dependency>

			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-jpa</artifactId>
				<version>${querydsl.version}</version>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
				<exclusions>
					<exclusion>
						<groupId>c3p0</groupId>
						<artifactId>c3p0</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
				<optional>true</optional>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web-reactive</artifactId>
				<version>${spring-web-reactive.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${sun-jaxb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
				<version>${sun-jaxb.version}</version>
			</dependency>

			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${HikariCP.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sc.filenet</groupId>
				<artifactId>filenet-client</artifactId>
				<version>${filenet-client.version}</version>
			</dependency>

			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>${dozer.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
				<version>${cxf-spring-boot-starter-jaxrs.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-hc</artifactId>
				<version>${cxf-spring-boot-starter-jaxrs.version}</version>
			</dependency>

			<dependency>
				<groupId>net.oauth.core</groupId>
				<artifactId>oauth</artifactId>
				<version>${oauth.version}</version>
			</dependency>

			<dependency>
				<groupId>net.oauth.core</groupId>
				<artifactId>oauth-consumer</artifactId>
				<version>${oauth.version}</version>
			</dependency>

			<dependency>
				<groupId>net.oauth.core</groupId>
				<artifactId>oauth-httpclient3</artifactId>
				<version>${oauth-httpclient3.version}</version>
			</dependency>

			<dependency>
				<groupId>net.oauth.core</groupId>
				<artifactId>oauth-provider</artifactId>
				<version>${oauth.version}</version>
			</dependency>

			<dependency>
				<groupId>io.vavr</groupId>
				<artifactId>vavr</artifactId>
				<version>${vavr.version}</version>
			</dependency>

			<dependency>
				<groupId>com.deliveredtechnologies</groupId>
				<artifactId>rulebook-spring</artifactId>
				<version>${rulebook.version}</version>
			</dependency>

            <dependency>
                <groupId>com.ibm</groupId>
                <artifactId>com.ibm.mq</artifactId>
                <version>${ibm.mq.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ibm</groupId>
                <artifactId>com.ibm.dhbcore</artifactId>
                <version>${ibm.mq.version}</version>
            </dependency>

			<dependency>
                <groupId>com.ibm</groupId>
                <artifactId>com.ibm.mq.jmqi</artifactId>
                <version>${ibm.mq.version}</version>
            </dependency>

			<dependency>
                <groupId>com.ibm</groupId>
                <artifactId>com.ibm.mqjms</artifactId>
                <version>${ibm.mq.version}</version>
            </dependency>

           <dependency>
                <groupId>com.ibm</groupId>
                <artifactId>com.ibm.mq.allclient</artifactId>
                <version>${ibm.mq.allclient.version}</version>
            </dependency>

            <dependency>
	            <groupId>javax.jms</groupId>
	            <artifactId>javax.jms-api</artifactId>
	            <version>${javax.jmsapi.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka.version}</version>
			</dependency>

		 	<dependency>
				<groupId>org.apache.kafka</groupId>
			 	<artifactId>kafka_2.11</artifactId>
		  		<version>${kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>org.everit.json</groupId>
				<artifactId>org.everit.json.schema</artifactId>
				<version>${org.everit.json.schema.version}</version>
			</dependency>

			<dependency>
				<groupId>com.jayway.jsonpath</groupId>
				<artifactId>json-path</artifactId>
				<version>${jsonpath.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-uber-scb</artifactId>
				<version>${hadoop-uber-scb-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-uber-scb</artifactId>
				<version>${hbase-uber-scb.version}</version>
			</dependency>

			<dependency>
    			<groupId>org.apache.poi</groupId>
    			<artifactId>poi</artifactId>
    			<version>${poi.version}</version>
			</dependency>

			<dependency>
    			<groupId>org.apache.poi</groupId>
    			<artifactId>poi-ooxml</artifactId>
    			<version>${poi-ooxml.version}</version>
			</dependency>

			<dependency>
				<groupId>org.littleshoot</groupId>
				<artifactId>littleproxy</artifactId>
				<version>${littleproxy.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>com.sc.rdc.csl.csl-svc-application.thirdparty</groupId>
				<artifactId>ECSPIDGeneratorv2</artifactId>
				<version>${ECSPIDGeneratorv2.version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox.version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox.version}</version>
			</dependency>

			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations.version}</version>
			</dependency>

			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${cucumber-junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-java</artifactId>
				<version>${cucumber-junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-spring</artifactId>
				<version>${cucumber-junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>${jasperreports.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${groovy.version}</version>
			</dependency>

			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${lowagie-itext.version}</version>
			</dependency>

			<dependency>
                <groupId>com.mastercard.api</groupId>
                <artifactId>spendcontrols</artifactId>
                <version>${mastercard-sdk.version}</version>
            </dependency>
			<!-- JSF Dependency -->
			<dependency>
				<groupId>org.joinfaces</groupId>
				<artifactId>jsf-spring-boot-starter</artifactId>
				<version>${joinfaces.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib-jdk8</artifactId>
				<version>${kotlin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-reflect</artifactId>
				<version>${kotlin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-test</artifactId>
				<version>${kotlin.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-test-junit</artifactId>
				<version>${kotlin.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>core</artifactId>
				<version>${google-zxing.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>javase</artifactId>
				<version>${google-zxing.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-dependencies</artifactId>
				<version>${spring.cloud.contract.dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.standardchartered.genie</groupId>
				<artifactId>genie</artifactId>
				<version>${genie.version}</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>

			<dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-feign</artifactId>
                <version>${spring-cloud-starter-feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign.form</groupId>
                <artifactId>feign-form-spring</artifactId>
                <version>${feign-form-spring.version}</version>
            </dependency>

			<dependency>
				<groupId>io.crnk</groupId>
				<artifactId>crnk-bom</artifactId>
				<version>${crnk.version}</version>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>com.solacesystems</groupId>
				<artifactId>sol-jms</artifactId>
				<version>${sol-jms.version}</version>
			</dependency>

			<dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
            </dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.qpid/qpid-jms-client -->
			<dependency>
				<groupId>org.apache.qpid</groupId>
				<artifactId>qpid-jms-client</artifactId>
				<version>${qpid-jms-client.version}</version>
			</dependency>

			<dependency>
				<groupId>com.twilio.sdk</groupId>
				<artifactId>twilio</artifactId>
				<version>${twilio.version}</version>
			</dependency>

			<dependency>
				<groupId>com.nimbusds</groupId>
				<artifactId>nimbus-jose-jwt</artifactId>
				<version>${nimbus-jose.version}</version>
			</dependency>

			<dependency>
				<groupId>org.messaginghub</groupId>
				<artifactId>pooled-jms</artifactId>
				<version>${pooled-jms.version}</version>
			</dependency>

			<dependency>
				<groupId>com.vladmihalcea</groupId>
				<artifactId>hibernate-types-52</artifactId>
				<version>${hibernate-types-52.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring-boot-starter</artifactId>
				<version>${camel-spring-boot-starter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${camel-jms.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-quartz2</artifactId>
				<version>${camel-quartz2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-sleuth</artifactId>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-zipkin</artifactId>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
				<version>${spring-cloud-starter-netflix-hystrix.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
				<version>${spring-cloud-starter-netflix-hystrix-dashboard.version}</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-buffer</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-common</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler-proxy</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport-native-epoll</artifactId>
				<version>${netty.version}</version>
				<classifier>${netty-transport-native-epoll-classifier}</classifier>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport-native-kqueue</artifactId>
				<version>${netty.version}</version>
				<classifier>${netty-transport-native-kqueue-classifier}</classifier>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec-http</artifactId>
				<version>${netty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.opensaml</groupId>
				<artifactId>opensaml</artifactId>
				<version>${opensaml.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.santuario</groupId>
				<artifactId>xmlsec</artifactId>
				<version>${xmlsec.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sc.rdc.csl</groupId>
				<artifactId>csl-svc-casas-v4</artifactId>
				<classifier>stubs</classifier>
				<version>${csl-svc-casas-v4.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>*</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>${javassist.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>${cdi-api.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-service-description-swagger</artifactId>
			<version>${cxf-spring-boot-starter-jaxrs.version}</version>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
			<version>${swagger-ui.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>${commons-text.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.agent</artifactId>
			<version>${jacoco.version}</version>
			<classifier>runtime</classifier>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
		</dependency>

		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${java-jwt.version}</version>
		</dependency>

		<dependency>
			<groupId>com.webmethods</groupId>
			<artifactId>webmethods-uber</artifactId>
			<version>${webmethods-uber.version}</version>
		</dependency>

		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-setup-spring-boot2</artifactId>
			<version>${crnk.version}</version>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-setup-spring</artifactId>
			<version>${crnk.version}</version>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-home</artifactId>
			<version>${crnk.version}</version>
		</dependency>
		<dependency>
			<groupId>io.crnk</groupId>
			<artifactId>crnk-format-plain-json</artifactId>
			<version>${crnk.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.crnk</groupId>
		    <artifactId>crnk-core</artifactId>
		    <version>${crnk.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.crnk</groupId>
		    <artifactId>crnk-setup-rs</artifactId>
		    <version>${crnk.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.crnk</groupId>
		    <artifactId>crnk-meta</artifactId>
		    <version>${crnk.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.crnk</groupId>
		    <artifactId>crnk-ui</artifactId>
		    <version>${crnk.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.crnk</groupId>
		    <artifactId>crnk-client</artifactId>
		    <version>${crnk.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.crnk</groupId>
		    <artifactId>crnk-setup-cdi</artifactId>
		    <version>${crnk.version}</version>
		</dependency>

		<dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>${graphql-spring-boot.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>${org-apache-tomcat-embed.version}</version>
		</dependency>

		<dependency>
			<groupId>com.graphql-java-kickstart</groupId>
			<artifactId>graphql-spring-boot-starter-test</artifactId>
			<version>${graphql-spring-boot.version}</version>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphiql-spring-boot-starter</artifactId>
            <version>${graphql-spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>${graphql-java.version}</version>
        </dependency>

		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-extended-scalars</artifactId>
			<version>${graphql-java-extended-scalars.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.graphql-java</groupId>
					<artifactId>graphql-java</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf.xjc-utils</groupId>
			<artifactId>cxf-xjc-runtime</artifactId>
			<version>${org.apache.cxf.xjc-utils.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot</artifactId>
			<version>${spring-boot-starter-jasypt.version}</version>
		</dependency>

		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>${logstash-logback-encoder.version}</version>
		</dependency>

		<!--<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>${tomcat.version}</version>
		</dependency>-->

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>

		<dependency>
			<groupId>oauth.signpost</groupId>
			<artifactId>signpost-core</artifactId>
			<version>${signpost-core.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-core</artifactId>
			<version>${xmlunit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-matchers</artifactId>
			<version>${xmlunit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>${rest-assured.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>json-smart</artifactId>
					<groupId>net.minidev</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.stefanbirkner</groupId>
			<artifactId>system-rules</artifactId>
			<version>${system-rules.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.database.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<version>${spring.cloud.verifier.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-contract-wiremock</artifactId>
			<version>${spring.cloud.wiremock.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring-web.version}</version>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-selenium</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-enrich-excel</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-info</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-java</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-failfast</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-enrich-csv</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-snippet</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-core</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-spring</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.standardchartered.genie</groupId>
			<artifactId>genie-report</artifactId>
			<version>${genie.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jsmart</groupId>
			<artifactId>zerocode-tdd</artifactId>
			<version>${zerocode-tdd.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>jaxrs-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jsmart</groupId>
			<artifactId>micro-simulator</artifactId>
			<version>${micro-simulator.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.codahale.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>${io.codahale.metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.metrics</groupId>
			<artifactId>spring-metrics</artifactId>
			<version>${spring.metrics.version}</version>
		</dependency>

		<dependency>
			<groupId>com.identityx</groupId>
			<artifactId>IdentityXClientSDK</artifactId>
			<version>${identity.client.sdk.version}</version>
			<exclusions>
				<exclusion>
					<groupId>net.minidev</groupId>
					<artifactId>json-smart</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-jdk15on</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>${org-bouncycastle-bcprov-jdk15on.version}</version>
		</dependency>

		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>${net-mini-json-smart.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-contract-stub-runner</artifactId>
			<version>${spring.cloud.contract.dependencies.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-jmx</artifactId>
			<version>${micrometer-registry-jmx.version}</version>
		</dependency>

		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>${xml-apis.version}</version>
		</dependency>

		<dependency>
			<groupId>javaxt</groupId>
			<artifactId>javaxt-core</artifactId>
			<version>${javaxt-core.version}</version>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.hibernate.orm.tooling</groupId>
					<artifactId>hibernate-enhance-maven-plugin</artifactId>
					<version>${hibernate.version}</version>

					<executions>
						<execution>
							<goals>
								<goal>enhance</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-xjc-plugin</artifactId>
					<version>${cxf-xjc-plugin.version}</version>

					<configuration>
						<sourceRoot>${project.build.directory}/generated-sources/java</sourceRoot>
					</configuration>

					<executions>
						<execution>
							<id>generate-sources</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>xsdtojava</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>io.github.kobylynskyi</groupId>
					<artifactId>graphql-codegen-maven-plugin</artifactId>
					<version>${graphql-codegen-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<graphqlSchemas>
									<rootDir>${project.basedir}/src/main/resources/graphqls</rootDir>
								</graphqlSchemas>
								<outputDir>${project.build.directory}/generated-sources/java/graphql</outputDir>
								<apiPackageName>com.sc.csl.retail.graphql.resolver.api</apiPackageName>
								<modelPackageName>com.sc.csl.retail.graphql.resolver.model</modelPackageName>
								<customTypesMapping>
									<DateTime>java.util.Date</DateTime>
								</customTypesMapping>
								<modelNameSuffix></modelNameSuffix>
								<parentInterfaces>
									<queryResolver>graphql.kickstart.tools.GraphQLQueryResolver</queryResolver>
									<mutationResolver>graphql.kickstart.tools.GraphQLMutationResolver</mutationResolver>
									<subscriptionResolver>graphql.kickstart.tools.GraphQLSubscriptionResolver</subscriptionResolver>
									<resolver><![CDATA[graphql.kickstart.tools.GraphQLResolver<{{TYPE}}>]]></resolver>
								</parentInterfaces>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-codegen-plugin</artifactId>
					<version>${cxf-codegen-plugin.version}</version>

					<configuration>
						<sourceRoot>${project.build.directory}/generated-sources/java/</sourceRoot>
					</configuration>

					<executions>
						<execution>
							<id>generate-sources</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>wsdl2java</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>com.mysema.maven</groupId>
					<artifactId>apt-maven-plugin</artifactId>
					<version>${apt-maven-plugin.version}</version>

					<configuration>
						<outputDirectory>target/generated-sources/java</outputDirectory>
						<processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
					</configuration>

					<executions>
						<execution>
							<goals>
								<goal>process</goal>
							</goals>
							<phase>generate-sources</phase>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>${flyway-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>${liquibase-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<artifactId>kotlin-maven-plugin</artifactId>
					<groupId>org.jetbrains.kotlin</groupId>
					<version>${kotlin.version}</version>

					<configuration>
						<compilerPlugins>
							<plugin>spring</plugin>
						</compilerPlugins>
						<jvmTarget>${java.version}</jvmTarget>
					</configuration>

					<executions>
						<execution>
							<id>compile</id>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<sourceDirs>
									<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
									<sourceDir>${project.basedir}/src/main/java</sourceDir>
								</sourceDirs>
							</configuration>
						</execution>
						<execution>
							<id>test-compile</id>
							<phase>test-compile</phase>
							<goals>
								<goal>test-compile</goal>
							</goals>
							<configuration>
								<sourceDirs>
									<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
									<sourceDir>${project.basedir}/src/test/java</sourceDir>
								</sourceDirs>
							</configuration>
						</execution>
					</executions>

					<dependencies>
						<dependency>
							<groupId>org.jetbrains.kotlin</groupId>
							<artifactId>kotlin-maven-allopen</artifactId>
							<version>${kotlin.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-contract-maven-plugin</artifactId>
					<version>${spring.cloud.contract.dependencies.version}</version>
					<extensions>true</extensions>
					<configuration>
						<baseClassForTests>com.sc.rdc.csl.ContractTest</baseClassForTests>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
						<processDependencyManagement>false</processDependencyManagement>
						<processPluginDependencies>false</processPluginDependencies>
					</configuration>
					<executions>
						<execution>
							<id>display-versions-updates</id>
							<phase>install</phase>
							<goals>
								<goal>display-parent-updates</goal>
								<goal>display-dependency-updates</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>${maven-jaxb2-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>

					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<ignoreMissingDescriptor>true</ignoreMissingDescriptor>
					<descriptors>
						<descriptor>database/db_package_descriptor.xml</descriptor>
					</descriptors>
					<finalName>${artifactId}-${build.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-remote-resources-plugin</artifactId>
				<version>${maven-remote-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-common-configs</id>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<resourceBundles>
								<resourceBundle>com.sc.rdc.csl:csl-validators:${csl-validators.version}</resourceBundle>
							</resourceBundles>
							<outputDirectory>${project.build.directory}/common-resources</outputDirectory>
						</configuration>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>com.sc.rdc.csl</groupId>
						<artifactId>csl-validators</artifactId>
						<version>${csl-validators.version}</version>
					</dependency>
				</dependencies>
			</plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-it-source</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<plugin>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<version>${swagger-maven-plugin.version}</version>
				<configuration>
					<skip>${is.library}</skip>
					<outputFileName>${artifactId}-${build.version}-openapi</outputFileName>
					<outputPath>${project.build.directory}</outputPath>
					<outputFormat>JSONANDYAML</outputFormat>
					<scannerClass>com.sc.rdc.csl.swagger.doc.scanner.JsonApiAnnotationScanner</scannerClass>
					<readerClass>com.sc.rdc.csl.swagger.doc.reader.JsonApiReader</readerClass>
					<resourcePackages>
						<package>${openApi.resource.packages}</package>
						<package>${openApi.resource.packages.extended}</package>
					</resourcePackages>
					<prettyPrint>true</prettyPrint>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>resolve</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.sc.rdc.csl</groupId>
						<artifactId>csl-lib-swagger-jsonapi-generator</artifactId>
						<version>${csl-lib-swagger-jsonapi-generator.version}</version>
					</dependency>
					<dependency>
						<groupId>com.fasterxml.jackson.core</groupId>
						<artifactId>jackson-core</artifactId>
						<version>2.9.5</version>
					</dependency>
					<dependency>
						<groupId>com.fasterxml.jackson.core</groupId>
						<artifactId>jackson-databind</artifactId>
						<version>2.9.5</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-lombok-config</id>
						<goals><goal>copy-resources</goal></goals>
						<phase>process-resources</phase>
						<configuration>
							<resources>
								<resource>
									<directory>${project.build.directory}/common-resources</directory>
									<filtering>false</filtering>
									<includes>
										<include>lombok.config</include>
									</includes>
								</resource>
							</resources>
							<outputDirectory>${basedir}</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>copy-jacoco-config</id>
						<goals><goal>copy-resources</goal></goals>
						<phase>process-resources</phase>
						<configuration>
							<delimiters>
								<delimiter>${*}</delimiter>
							</delimiters>
							<resources>
								<resource>
									<directory>${project.build.directory}/common-resources</directory>
									<filtering>true</filtering>
									<includes>
										<include>jacoco-agent.properties</include>
									</includes>
								</resource>
							</resources>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>default-resources</id>
						<goals><goal>resources</goal></goals>
						<configuration>
                    	 <resources>
                        	<resource>
                            	<directory>${basedir}/src/main/resources</directory>
								<excludes>
									<exclude>config/**/*.yml</exclude>
								</excludes>
                        	</resource>
                   		 </resources>
                		</configuration>
					</execution>

					<execution>
						<id>default-test-resources</id>
						<goals><goal>testResources</goal></goals>
						<configuration>
                    	 <resources>
                        	<resource>
									<directory>${basedir}/src/test/resources</directory>
                        	</resource>
                   		 </resources>
                		</configuration>
					</execution>
                </executions>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>delete-lombok-config</id>
						<goals>
							<goal>clean</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<failOnError>false</failOnError>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.basedir}</directory>
									<includes>
										<include>lombok.config</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.nickwongdev</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
                <version>${aspectj-maven-plugin.version}</version>

				<executions>
					<execution>
						<id>aspectj-compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<sources />
					<forceAjcCompile>true</forceAjcCompile>
					<weaveDirectories>
						<weaveDirectory>${project.build.directory}/classes</weaveDirectory>
					</weaveDirectories>

					<complianceLevel>${java.version}</complianceLevel>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showWeaveInfo>true</showWeaveInfo>
				</configuration>

				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>${git-commit-id-plugin.version}</version>

				<configuration>
					<verbose>false</verbose>
				</configuration>
			</plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>

				<executions>
					<execution>
						<id>build-info</id>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>

                <configuration>
                    <skip>${is.library}</skip>
					<folders>
						<folder>${basedir}/src/main/resources/config</folder>
					</folders>
					<additionalProperties>
						<java.source>${maven.compiler.source}</java.source>
						<java.target>${maven.compiler.target}</java.target>
						<spring-boot.version>${spring-boot-starter-parent.version}</spring-boot.version>
						<parent.groupId>${project.parent.groupId}</parent.groupId>
						<parent.artifactId>${project.parent.artifactId}</parent.artifactId>
						<parent.version>${project.parent.version}</parent.version>

						<csl-validators.version>${csl-validators.version}</csl-validators.version>
						<csl-lib-base.version>${csl-lib-base.version}</csl-lib-base.version>
						<csl-lib-cache.version>${csl-lib-cache.version}</csl-lib-cache.version>
					</additionalProperties>
				</configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<dependencies>
						<dependency>
							<groupId>org.junit.vintage</groupId>
							<artifactId>junit-vintage-engine</artifactId>
							<version>${junit-vintage-engine.version}</version>
						</dependency>
				</dependencies>
                <configuration>
                 	<systemPropertyVariables>
                        <jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
                    </systemPropertyVariables>
                    <failIfNoTests>true</failIfNoTests>
					<skipTests>${skipUTs}</skipTests>
					<argLine>${sureFireArgLine}</argLine>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
					<skipTests>${skipTests}</skipTests>
                    <skipITs>${skipITs}</skipITs>
					<argLine>${failSafeArgLine}</argLine>
                    <failIfNoTests>false</failIfNoTests>
                    <includes>
                        <include>**/*IT.*</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs-maven-plugin.version}</version>

				<configuration>
					<failOnError>false</failOnError>
					<xmlOutput>true</xmlOutput>
					<findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xml-maven-plugin</artifactId>
				<version>${xml-maven-plugin.version}</version>
				<configuration>
					<transformationSets>
						<transformationSet>
							<dir>${project.build.directory}/findbugs</dir>
							<outputDir>${project.build.directory}/findbugs</outputDir>
							<stylesheet>plain.xsl</stylesheet>
							<fileMappers>
								<fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
									<targetExtension>.html</targetExtension>
								</fileMapper>
							</fileMappers>
						</transformationSet>
						<transformationSet>
							<dir>${project.build.directory}/checkstyle</dir>
							<outputDir>${project.build.directory}/checkstyle</outputDir>
							<stylesheet>csl-checkstyle-report.xsl</stylesheet>
							<fileMappers>
								<fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
									<targetExtension>.html</targetExtension>
								</fileMapper>
							</fileMappers>
						</transformationSet>
					</transformationSets>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.code.findbugs</groupId>
						<artifactId>findbugs</artifactId>
						<version>${findbugs.version}</version>
					</dependency>
					<dependency>
						<groupId>com.sc.rdc.csl</groupId>
						<artifactId>csl-validators</artifactId>
						<version>${csl-validators.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>

					<excludes>
						<exclude>com/sc/rdc/csl/ss/**/*</exclude>
						<exclude>com/sc/referential/**/*</exclude>

						<exclude>com/sc/csl/**/*Application.class</exclude>
						<exclude>com/sc/csl/**/*$AjcClosure*</exclude>
						<exclude>com/sc/csl/**/config/**/*</exclude>

						<exclude>com/sc/rdc/csl/**/*Application.class</exclude>
						<exclude>com/sc/rdc/csl/**/*$AjcClosure*</exclude>
						<exclude>com/sc/rdc/csl/**/config/**/*</exclude>

						<exclude>com/sc/rdc/adc/**/*Application.class</exclude>
						<exclude>com/sc/rdc/adc/**/*$AjcClosure*</exclude>
						<exclude>com/sc/rdc/adc/**/config/**/*</exclude>
						<exclude>com/sc/casas/**/*</exclude>
						<exclude>com/craftsilicon/**/*</exclude>

						<exclude>com/sc/corebanking*/**/*</exclude>
						<exclude>com/sc/scbcorebanking*/**/*</exclude>
						<exclude>com/sc/groupfunctions/**/*</exclude>
						<exclude>com/sc/scbml*/**/*</exclude>
						<exclude>com/sc/cash*/**/*</exclude>
						<exclude>net/webservicex/**/*</exclude>
						<exclude>org/w3/**/*</exclude>
						<exclude>org/apache/**/*</exclude>
						<exclude>com/scb/nfs/**/*</exclude>
						<exclude>scb/imbank/**/*</exclude>
						<exclude>card/std/**/*</exclude>
                        <exclude>iso/std/**/*</exclude>
						<exclude>cash/std/**/*</exclude>
						<exclude>com/daon/ws/**</exclude>
						<exclude>com/craftsilicon/**</exclude>
						<exclude>com/nibss/**/*</exclude>
						<exclude>com/sc/risk/**</exclude>
						<!-- Exclude Junit coverage report for Model packages -->
						<exclude>com/sc/rdc/csl/**/model/*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>default-instrument</id>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
					<execution>
						<id>default-restore-instrumented-classes</id>
						<goals>
							<goal>restore-instrumented-classes</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>${project.build.directory}/coverage-reports</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<append>true</append>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
							<propertyName>failSafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputDirectory>${project.build.directory}/coverage-reports</outputDirectory>
						</configuration>
					</execution>


					<execution>
						<id>verify-coverage</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<haltOnFailure>true</haltOnFailure>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>55%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>csl-validate</id>
			<activation>
				<property>
					<name>!skipValidate</name>
				</property>
			</activation>

			<build>
				<plugins>

					<plugin>
						<groupId>com.sc.rdc.csl</groupId>
						<artifactId>csl-validators</artifactId>
						<version>${csl-validators.version}</version>

						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>validate-pom</goal>
								</goals>
								<configuration>
									<ignoreDependencies>
										<adc-svc-authentication>
											org.apache.axis:axis,
											commons-discovery:commons-discovery,
											commons-logging:commons-logging,
											javax.xml.rpc:javax.xml.rpc-api
										</adc-svc-authentication>

										<adc-svc-notifications>
											com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider,
											com.fasterxml.jackson.datatype:jackson-datatype-jsr310,
											com.fasterxml.jackson.datatype:jackson-datatype-jdk8,
											com.fasterxml.jackson.module:jackson-module-parameter-names
										</adc-svc-notifications>


										<csl-svc-ibank-registrations>
											org.apache.axis:axis,
											commons-discovery:commons-discovery,
											commons-logging:commons-logging,
											javax.xml.rpc:javax.xml.rpc-api,
											org.apache.wss4j:wss4j-ws-security-common,
											org.apache.wss4j:wss4j-ws-security-dom,
											org.apache.cxf:cxf-rt-ws-security
										</csl-svc-ibank-registrations>
										<csl-svc-security-v3>
											org.apache.cxf:cxf-rt-ws-security
										</csl-svc-security-v3>
									</ignoreDependencies>

									<ignorePlugins>
										<adc-svc-authentication>
											org.codehaus.mojo:axistools-maven-plugin
										</adc-svc-authentication>

										<csl-svc-ibank-registrations>
											org.codehaus.mojo:axistools-maven-plugin
										</csl-svc-ibank-registrations>
									</ignorePlugins>

									<overridableDependencies>
										org.postgresql:postgresql,
										org.apache.kafka:kafka-clients,
										org.apache.kafka:kafka_2.11,
										org.springframework.kafka:spring-kafka,
										org.springframework.kafka:spring-kafka-test,
										org.mongodb:mongo-java-driver,
										org.springframework.boot:spring-boot-starter-data-mongodb,
										org.apache.hadoop:hadoop-uber-scb,
										org.apache.hbase:hbase-uber-scb,
										com.ibm:db2jcc4,com.oracle:oracle-jdbc-scb,
										org.elasticsearch.client:transport,
										org.elasticsearch:elasticsearch,
										com.ibm:com.ibm.mq,com.ibm:com.ibm.dhbcore,
										com.ibm:com.ibm.mq.jmqi,com.ibm:com.ibm.mqjms,
										org.apache.poi:poi,org.apache.poi:poi-ooxml,
										com.sc.filenet:filenet-client,
										com.sc.rdc.csl.csl-svc-application.thirdparty:ECSPIDGeneratorv2,
										com.google.firebase:firebase-admin,
										org.jetbrains.kotlin:kotlin-stdlib-jdk8,
										org.jetbrains.kotlin:kotlin-reflect,
										org.jetbrains.kotlin:kotlin-test,
										org.jetbrains.kotlin:kotlin-test-junit,
										com.google.zxing:core,
										com.google.zxing:javase,
										com.turo:pushy,
										org.apache.qpid:qpid-jms-client,
										com.twilio.sdk:twilio
									</overridableDependencies>
								</configuration>
							</execution>

							<execution>
								<id>validate-jacoco</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>validate-jacoco</goal>
								</goals>
								<configuration>
									<jacocoExcludedArtifacts>
										<param>csl-base-pom</param>
										<param>csl-svc-auth</param>
										<param>csl-lib-base</param>
										<param>csl-lib-cache</param>
									</jacocoExcludedArtifacts>
									<skipCheck>${skipUTs}</skipCheck>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven-checkstyle-plugin.version}</version>

						<configuration>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failOnViolation>true</failOnViolation>
						</configuration>

						<executions>
							<execution>
								<id>check-source</id>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<configLocation>csl-checkstyle.xml</configLocation>
									<sourceDirectories>${project.basedir}/src/main/java</sourceDirectories>
									<suppressionsLocation>csl-checkstyle-suppressions.xml</suppressionsLocation>
									<outputFile>${project.build.directory}/checkstyle/report.xml</outputFile>
								</configuration>
							</execution>

							<execution>
								<id>check-test</id>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<configLocation>csl-test-checkstyle.xml</configLocation>
									<sourceDirectories>${project.build.testSourceDirectory}</sourceDirectories>
									<outputFile>${project.build.directory}/checkstyle/test-report.xml</outputFile>
								</configuration>
							</execution>

							<execution>
								<id>check-integration-test</id>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<configLocation>csl-integration-checkstyle.xml</configLocation>
									<sourceDirectories>${project.basedir}/src/it/java</sourceDirectories>
									<outputFile>${project.build.directory}/checkstyle/integration-test-report.xml</outputFile>
								</configuration>
							</execution>
						</executions>

						<dependencies>
							<dependency>
								<groupId>com.puppycrawl.tools</groupId>
								<artifactId>checkstyle</artifactId>
								<version>${checkstyle.version}</version>
							</dependency>

							<dependency>
								<groupId>commons-beanutils</groupId>
								<artifactId>commons-beanutils</artifactId>
								<version>${commons-beanutils.version}</version>
							</dependency>

							<dependency>
								<groupId>com.sc.rdc.csl</groupId>
								<artifactId>csl-validators</artifactId>
								<version>${csl-validators.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>dev-profile</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.version>0.0.0</build.version>
				<build.number>-SNAPSHOT</build.number>
				<build.version.seperator/>
				<skipITs>true</skipITs>
				<skipUTs>false</skipUTs>
			</properties>
		</profile>

		<profile>
			<id>jenkins-profile</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<build.version.seperator>.</build.version.seperator>
			</properties>
		</profile>

		<profile>
			<id>integration-test</id>
			<properties>
				<build.profile.id>integration-test</build.profile.id>
				<skipITs>false</skipITs>
				<skipUTs>true</skipUTs>
			</properties>
		</profile>

        <profile>
            <id>all-test</id>
            <properties>
                <build.profile.id>all-test</build.profile.id>
				<skipITs>false</skipITs>
				<skipUTs>false</skipUTs>
				<skipTests>false</skipTests>
            </properties>
        </profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>artifactory-snapshot</id>
			<name>Artifactory Snapsot</name>
			<layout>default</layout>
			<url>https://artifactory.global.standardchartered.com/artifactory/maven-snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
